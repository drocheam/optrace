[tox]
envlist = py313
requires = tox-ignore-env-name-mismatch

[pytest]
testpaths = tests
timeout = 360
timeout_method = thread
filterwarnings = ignore::UserWarning
addopts = --random-order
markers = 
    slow: tests slower than 10 seconds on my machine
    os: marks test relevant for testing of different operating systems
    gui1: only first batch of GUI tests (separated for lower RAM usage)
    gui2: only second batch of GUI tests (separated for lower RAM usage)
    gui3: only third batch of GUI tests (separated for lower RAM usage)

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313
    
# testing env
[testenv]
passenv = 
    HOME
    DISPLAY
    WAYLAND_DISPLAY
    QT_QPA_PLATFORM
    XAUTHORITY
    GITHUB_ACTIONS
env_dir = {toxworkdir}{/}env_static
runner = ignore_env_name_mismatch
basepython = {envlist}
deps = pylint
extras = 
    tests 
    docs
setenv =
    PYTHONPATH = {env:PYTHONPATH}{:}{toxinidir}{:}{envsitepackagesdir}
    LIBGL_ALWAYS_SOFTWARE = 1  
commands =
    coverage run -p --source=optrace --branch -m pytest {posargs} ./tests/test_geometry.py ./tests/test_misc.py \
        ./tests/test_image.py ./tests/test_refraction_index.py ./tests/test_scope.py ./tests/test_spectrum.py \
         ./tests/test_surface.py ./tests/test_tma.py
    coverage run -p --source=optrace --branch -m pytest {posargs} ./tests/test_color.py ./tests/test_convolve.py \
        ./tests/test_load.py ./tests/test_tracer.py ./tests/test_tracer_special.py
    coverage run -p --source=optrace --branch -m pytest {posargs} ./tests/test_plots.py
    coverage run -p --source=optrace --branch -m pytest -m gui1 {posargs} ./tests/test_gui.py
    coverage run -p --source=optrace --branch -m pytest -m gui2 {posargs} ./tests/test_gui.py
    coverage run -p --source=optrace --branch -m pytest -m gui3 {posargs} ./tests/test_gui.py
    coverage run -p --source=optrace --branch -m pytest {posargs} ./tests/test_examples.py
    coverage combine
    coverage report --show-missing
    coverage erase

# testing of system dependent functionality
[testenv:os]
commands = pytest -m os {posargs}

# don't test slower tests (> 10 seconds)
[testenv:fast]
commands = pytest -m "not slow" {posargs}

# check all links in software and documentation
[testenv:linkcheck]
commands = sphinx-build -M linkcheck ./docs/source ./docs/build -j auto

# nitpicky documentation building, turn warnings into errors
[testenv:docsbuildcheck]
commands = sphinx-build -M html ./docs/source ./docs/build/htmlcheck -n -W -j auto

# test documentation doctest snippets
[testenv:doctest]
commands = sphinx-build -M doctest ./docs/source ./docs/build -j auto

# create documentation and update structure and changelog
[testenv:docs]
allowlist_externals = /usr/bin/bash
commands =
    bash ./docs/generate_changelog.sh
    bash ./docs/generate_bib_structure.sh
    sphinx-build -M html ./docs/source ./docs/build -n -j auto

# pylint
# exclude some unnecessary rules
[testenv:pylint]
skip_install = True
commands = pylint ./optrace -j 0 --max-line-length 120 --variable-naming-style any \
    --disable=W0612,W0613,W0106,W0212,E1101,R0902,R0904,R0911,R0912,R0913,R0914,R0915,R0916,C0301,C0302 \
    --good-names-rgxs=^[_a-z][_a-z0-9]?$

